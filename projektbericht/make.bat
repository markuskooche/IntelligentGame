ECHO OFF

SET RUECKSPRUNGADRESSE1=NullOrOneParameter
SET RUECKSPRUNGADRESSE2=TwoOrNParameter

SET quietMode= 
SET tempRuecksprung=%RUECKSPRUNGADRESSE1%

GOTO setCommandsForNonQuietMode
:returnFromSetCommandsForNonQuietMode0To1Parameters

REM if there is no parameter do this
IF %1!==! GOTO start0
REM or only one parameter "q" do this
IF %1==q IF %2!==! SET tempRuecksprung=%RUECKSPRUNGADRESSE1%
IF %1==q IF %2!==! SET quietMode=^> NUL & GOTO setCommandsForQuietMode
:returnFromSetCommandsForQuietMode0To1Parameters
IF %1==q IF %2!==! GOTO start0

REM if there are more parameters, process them one after the other from left to right
REM until there is no parameter left (case: "%1!==!"). Then procede to jump mark "ende"
:mainLoop
IF %1!==! GOTO ende
ECHO Try to execute "%1"
IF %1==q SET tempRuecksprung=%RUECKSPRUNGADRESSE2%
IF %1==q SET quietMode=^> NUL & GOTO setCommandsForQuietMode
:returnFromSetCommandsForQuietMode2ToNParameters
IF %1==u SET tempRuecksprung=%RUECKSPRUNGADRESSE2%
IF %1==u SET quietMode=
IF %1==u GOTO setCommandsForNonQuietMode
:returnFromSetCommandsForNonQuietMode2ToNParameters
IF %1==q GOTO :mainLoopShiftParameters
IF %1==u GOTO :mainLoopShiftParameters
IF %1==all GOTO start0
IF %1==allrec GOTO start2
IF %1==clean GOTO clean
IF %1==cleanrec GOTO cleanrec
IF %1==dvi GOTO dvi
IF %1 NEQ all GOTO parameterWrong
:mainLoopShiftParameters
SHIFT
GOTO mainLoop

REM the error output if there was a wrong parameter
:parameterWrong
ECHO -----
ECHO Usage: make {q^|u^|all^|allrec^|clean^|cleanrec^}
ECHO -----
ECHO q:        tries to suppress as much output generated by compile process as possible
ECHO u:        reverts q (turns on non-quiet mode)
ECHO all:      creates PDFs for all LaTeX-files in current directory
ECHO allrec:   creates PDFs for all LaTeX-files in current directory (recursively)
ECHO clean:    deletes all unnecessary files (created during LaTeX compile process)
ECHO cleanrec: deletes all unnecessary files (created during LaTeX compile process), recursively
ECHO dvi:      Use latex, dvips, ps2pdf to create PDF (without dvi parameter script uses pdflatex)
ECHO -----
ECHO Note: The quiet mode is turned on as soon as it occurs in the parameter list, e.g.
ECHO       if the parameter list is "all q all" then:
ECHO          1. "all" is executed in non-quiet mode,
ECHO          2. "q" turns quiet mode on,
ECHO          3. "all" is now executed in quiet mode
ECHO -----
GOTO ende

REM set the latex commands for quiet mode
:setCommandsForQuietMode
SET LATEX=latex -quiet 
SET MAKEINDEX=makeindex -q 
SET BIBTEX=bibtex -q 
SET DVIPS=dvips -q 
SET PS2PDF=ps2pdf13
SET PDFLATEX=pdflatex -quiet 
IF %tempRuecksprung%==%RUECKSPRUNGADRESSE1% GOTO returnFromSetCommandsForQuietMode0To1Parameters
IF %tempRuecksprung%==%RUECKSPRUNGADRESSE2% GOTO returnFromSetCommandsForQuietMode2ToNParameters
GOTO mainLoop

REM set the latex commands (in non-quiet mode)
:setCommandsForNonQuietMode
SET LATEX=latex 
SET MAKEINDEX=makeindex 
SET BIBTEX=bibtex 
SET DVIPS=dvips 
SET PS2PDF=ps2pdf13 
SET PDFLATEX=pdflatex 
IF %tempRuecksprung%==%RUECKSPRUNGADRESSE1% GOTO returnFromSetCommandsForNonQuietMode0To1Parameters
IF %tempRuecksprung%==%RUECKSPRUNGADRESSE2% GOTO returnFromSetCommandsForNonQuietMode2ToNParameters
GOTO mainLoop

:start0
IF EXIST *.aux DEL *.aux
IF EXIST *.dvi DEL *.dvi
IF EXIST *.idx DEL *.idx
IF EXIST *.ilg DEL *.ilg
IF EXIST *.ind DEL *.ind
IF EXIST *.log DEL *.log
IF EXIST *.toc DEL *.toc
IF EXIST *.bbl DEL *.bbl
IF EXIST *.blg DEL *.blg
IF EXIST *.out DEL *.out
IF EXIST *.bak DEL *.bak
IF EXIST *.out DEL *.out
IF EXIST *synctex.gz DEL *synctex.gz
IF EXIST *.ps DEL *.ps
IF EXIST *.pdf DEL *.pdf

:start1
REM TeX all TeX-files in current directory
REM for /r %%i in (*) do echo %%i // for recursive version
FOR %%f IN (*.tex) DO (
  %PDFLATEX% "%%f" %quietMode%
  %BIBTEX% "%%~nf.aux" %quietMode%
  %PDFLATEX% "%%f" %quietMode%
  %PDFLATEX% "%%f" %quietMode%
)
GOTO mainLoopShiftParameters

:start2
IF EXIST *.aux DEL *.aux
IF EXIST *.dvi DEL *.dvi
IF EXIST *.idx DEL *.idx
IF EXIST *.ilg DEL *.ilg
IF EXIST *.ind DEL *.ind
IF EXIST *.log DEL *.log
IF EXIST *.toc DEL *.toc
IF EXIST *.bbl DEL *.bbl
IF EXIST *.blg DEL *.blg
IF EXIST *.out DEL *.out
IF EXIST *.bak DEL *.bak
IF EXIST *.out DEL *.out
IF EXIST *synctex.gz DEL *synctex.gz
IF EXIST *.ps DEL *.ps
IF EXIST *.pdf DEL *.pdf

:start3
REM TeX all TeX-files in current directory
REM for /r %%i in (*) do echo %%i // for recursive version
set OLDDIR=%CD%
@echo off & setlocal EnableDelayedExpansion
FOR /r %%f IN (*.tex) DO (
  SET str1=%%~pf
  SET str2=!str1:\skel\=!
  IF x!str2! == x!str1! (
    cd %str1%
    %LATEX% "%%f" %quietMode%
    %MAKEINDEX% -s %INCLUDEDIR%/IndexStyle.ist "%%~nf" %quietMode%
    %LATEX% "%%f" %quietMode%
    %DVIPS% "%%~nf.dvi" %quietMode%
    %PS2PDF% "%%~nf.ps" %quietMode%
  )
)
chdir /d %OLDDIR%
GOTO mainLoopShiftParameters


REM delete all unnecessary files
:clean
IF EXIST *.aux DEL *.aux
IF EXIST *.dvi DEL *.dvi
IF EXIST *.idx DEL *.idx
IF EXIST *.ilg DEL *.ilg
IF EXIST *.ind DEL *.ind
IF EXIST *.log DEL *.log
IF EXIST *.toc DEL *.toc
IF EXIST *.bbl DEL *.bbl
IF EXIST *.blg DEL *.blg
IF EXIST *.out DEL *.out
IF EXIST *.bak DEL *.bak
IF EXIST *.out DEL *.out
IF EXIST *synctex.gz DEL *synctex.gz
IF EXIST *.ps DEL *.ps
IF EXIST *.pdf DEL *.pdf
GOTO mainLoopShiftParameters


REM delete all unnecessary files recursively
:cleanrec
set OLDDIR=%CD%
FOR /r %%f IN (.) DO (
  cd %%~f
  IF EXIST *.aux DEL *.aux
  IF EXIST *.dvi DEL *.dvi
  IF EXIST *.idx DEL *.idx
  IF EXIST *.ilg DEL *.ilg
  IF EXIST *.ind DEL *.ind
  IF EXIST *.log DEL *.log
  IF EXIST *.toc DEL *.toc
  IF EXIST *.bbl DEL *.bbl
  IF EXIST *.blg DEL *.blg
  IF EXIST *.out DEL *.out
  IF EXIST *.bak DEL *.bak
  IF EXIST *.out DEL *.out
  IF EXIST *synctex.gz DEL *synctex.gz
  IF EXIST *.ps DEL *.ps
  IF EXIST *.pdf DEL *.pdf
)
chdir /d %OLDDIR%
GOTO mainLoopShiftParameters

:dvi
REM TeX all TeX-files in current directory
REM for /r %%i in (*) do echo %%i // for recursive version
FOR %%f IN (*.tex) DO (
  %LATEX% "%%f" %quietMode%
  %LATEX% "%%f" %quietMode%
  %DVIPS% "%%~nf.dvi" %quietMode%
  %PS2PDF% "%%~nf.ps" %quietMode%
)
GOTO mainLoopShiftParameters

:ende